install.packages("BiocManager")
pkgs <- rownames(installed.packages())
pkgs
BiocManager::install("DESeq2")
library(cluster)
install.packages("enrichR")
shiny::runApp('Documents/UTHSCSA_work/DepLink_all_series/DepLink_20220607')
install.packages("rJava")
runApp('Documents/UTHSCSA_work/DepLink_all_series/DepLink_20220607')
library("rintrojs")
library("shiny")
library("shinyjs")
library("shinyBS")
library("shinydashboardPlus")
library("shinycssloaders")
library("shinydashboard")
library("shinyWidgets")
library("plotly")
library("DT")
library("VennDiagram")
library("rcdk")
install.packages("rcdk")
library("rcdk")
library("rintrojs")
library("shiny")
library("shinyjs")
library("shinyBS")
library("shinydashboardPlus")
library("shinycssloaders")
library("shinydashboard")
library("shinyWidgets")
library("plotly")
library("DT")
library("VennDiagram")
library("rcdk")
install.packages("rJava")
library("rcdk")
library("tidyr")
library("visNetwork")
library("stringr")
library("dplyr")
library("sqldf")
library("igraph")
library("rcdk")
library(devtools)
install.packages("devtools")
library(devtools)
install_github("https://github.com/CDK-R/rcdklibs")
install_github("https://github.com/CDK-R/cdkr", subdir="rcdk")
library("rcdk")
install.packages("rJava")
library("rcdk")
install_github("https://github.com/CDK-R/rcdklibs")
install_github("https://github.com/CDK-R/cdkr", subdir="rcdk")
install.packages("rJava", repos="https://rforge.net", type = "source")
R.Version()
library(rJava)
trap R
.jinit()
remove.packages("rJava")
install.packages("rJava", repos="https://rforge.net")
install.packages("rJava", repos="https://rforge.net")
BiocManager::install("Rhtslib")
R.Version()
BiocManager::install("DNAcopy")
BiocManager::install("Rhtslib")
BiocManager::install("Rhtslib")
BiocManager::install("Rhtslib")
BiocManager::install('edgeR')
install.packages("rsconnect")
install.packages("gplots")
library(Rtsne) # Load package
iris_unique <- unique(iris) # Remove duplicates
set.seed(42) # Sets seed for reproducibility
View(iris_unique)
tsne_out <- Rtsne(as.matrix(iris_unique[,1:4])) # Run TSNE
tsne_out$Y
plot(tsne_out$Y,col=iris_unique$Species,asp=1) # Plot the result
View(iris_unique)
rownames(iris_unique) <- paste("Sample",rownames(iris_unique), sep = "_")
text(tsne_out$Y, labels =rownames(iris_unique) )
plot(tsne_out$Y,col=iris_unique$Species,asp=1) # Plot the result
text(tsne_out$Y, labels =rownames(iris_unique) ,cex = 0.5)
plot(tsne_out$Y,col=iris_unique$Species,asp=1) # Plot the result
text(tsne_out$Y, labels =rownames(iris_unique) ,cex = 0.1)
iris_unique$Species
library(rJava)
library(rJava)
load("OneDrive - University of Pittsburgh/UPitt_project/shinyDeepDR_work/ccle_exp_and_mut_index_median.RData")
View(ccle.exp.index.median)
View(ccle.mut.index.median)
BiocManager::install("maftools")
BiocManager::install("Rhtslib")
R.Version()
setwd("~/OneDrive - University of Pittsburgh/UPitt_project/shinyDeepDR_work/Paper/A joint NCBI and EMBL_EBI transcript set for clinical genomics and research/")
gtf.ensemb; <- read.table('MANE.GRCh38.v1.0.ensembl_genomic.gtf', header = FALSE, sep = '\t')
gtf.ensembl <- read.table('MANE.GRCh38.v1.0.ensembl_genomic.gtf', header = FALSE, sep = '\t')
View(gtf.ensembl)
gtf.ensembl$V9[1]
gtf.ensembl$V9[2]
gtf.ensembl.gene <- gtf.ensembl[which(gtf.ensembl$V3 == "gene"), ]
View(gtf.ensembl.gene)
gtf.ensembl.gene$V9[1:5]
a <- strsplit(gtf.ensembl.gene$V9[1:5], split = ";")
View(a)
a[[1]]
unlist(strsplit(a[[1]], split = " "))
unlist(strsplit(a[[1]], split = " "))[c(2,8)]
b <- lapply(a,FUN = function(x) unlist(strsplit(x, split = " "))[c(2,8)])
View(b)
b[[1]]
b[[1]][2]
b <- lapply(a,FUN = function(x) unlist(strsplit(x, split = " "))[c(2,length(unlist(strsplit(x, split = " "))))])
View(b)
a <- strsplit(gtf.ensembl.gene$V9, split = ";")
b <- lapply(a,FUN = function(x) unlist(strsplit(x, split = " "))[c(2,length(unlist(strsplit(x, split = " "))))])
View(b)
lapply(a, FUN = function(x) length(unlist(strsplit(x, split = " "))))
c <- unlist(lapply(a, FUN = function(x) length(unlist(strsplit(x, split = " ")))))
sum(c !=8)
sum(c ===8)
sum(c ==8)
a[[1]]
ensembl_table <- data.frame(matrix(data = NA, nrow = 19062, ncol = 2) )
ensembl_table <- data.frame(matrix(data = NA, nrow = 19062, ncol = 2) )
colnames(ensembl_table) <- c("ensembl_id", "gene_name")
for (i in 1:nrow(ensembl_table)) {
ensembl_table$ensembl_id <- b[[i]][1]
ensembl_table$gene_name <- b[[i]][2]
}
View(ensembl_table)
for (i in 1:nrow(ensembl_table)) {
ensembl_table$ensembl_id[i] <- b[[i]][1]
ensembl_table$gene_name[i] <- b[[i]][2]
}
unlist(strsplit(b[[i]][1], split = "."))[1]
b[[i]][1]
source("~/.active-rstudio-document", echo=TRUE)
unlist(strsplit(b[[i]][1], split = "."))[1]
unlist(strsplit(b[[i]][1], split = "."))
library(stringr)
i=1
nchar( b[[i]][2])
nchar( b[[i]][1])
b[[i]][1]
nchar(ENSG00000160072)
nchar("ENSG00000160072")
for (i in 1:nrow(ensembl_table)) {
ensembl_table$ensembl_id[i] <- substr( b[[i]][1],start = 1,stop = 15)
ensembl_table$gene_name[i] <- b[[i]][2]
}
length(unique(ensembl_table$gene_name))
duplicated(ensembl_table$gene_name)
ensembl_table$gene_name[duplicated(ensembl_table$gene_name)]
View(gtf.ensembl.gene)
View(ensembl_table)
setwd("~/OneDrive - University of Pittsburgh/UPitt_project/shinyDeepDR_work/Datasets/TCGA/")
df <- read.delim("tcga_exp_data.txt", sep = "\t", stringsAsFactors = F)
View(df)
dt <- read.delim("tcga_mut_data.txt", sep = "\t", stringsAsFactors = F)
colnames(df)[1:11]
colnames(dt)[1:11]
colnames(dt)[1:11] == colnames(df)[1:11]
colnames(df)[1] <- "Gene"
colnames(dt)[1]<- "Gene"
df.select <- df[,c(1, 50:54)]
View(df.select)
-paste0(rep("sample",5), seq(1,5,1))
paste0(rep("sample",5), seq(1,5,1))
colnames(df.select)[-1] <-paste0(rep("sample",5), seq(1,5,1))
df.select <- df[,c(1, 50:54)]
paste0(rep("sample",5), seq(20,25,1))
write.table(df.select, file = "../example_data_for_test_function/gene_exp/gene_exp_fpkm_5samples.txt", sep = "\t", col.names = T, row.names = F, quote = F)
colnames(dt)[1]<- "Gene"
dt.select <- dt[,c(1, 50:54)]
colnames(df.select) == colnames(dt.select)
colnames(df.select)[-1] <-paste0(rep("sample",5), seq(20,25,1))
write.table(df.select, file = "../example_data_for_test_function/gene_exp/gene_exp_fpkm_5samples.txt", sep = "\t", col.names = T, row.names = F, quote = F)
colnames(dt.select)[-1] <-paste0(rep("sample",5), seq(20,25,1))
write.table(dt.select, file = "../example_data_for_test_function/gene_mut/gene_mut_matrix_5samples.txt", sep = "\t", col.names = T, row.names = F, quote = F)
paste0(rep("sample",5), seq(20,25,1))
df.select <- df[,c(1, 50:54)]
colnames(df.select)[-1] <-paste0(rep("sample",5), seq(20,25,1))
colnames(df.select)[-1] <-paste0(rep("sample",5), seq(20,24,1))
View(df.select)
colnames(df.select)[-1] <-paste0(rep("sample",5), seq(20,24,1))
write.table(df.select, file = "../example_data_for_test_function/gene_exp/gene_exp_fpkm_5samples.txt", sep = "\t", col.names = T, row.names = F, quote = F)
dt.select <- dt[,c(1, 50:54)]
colnames(dt.select)[-1] <-paste0(rep("sample",5), seq(20,24,1))
write.table(dt.select, file = "../example_data_for_test_function/gene_mut/gene_mut_matrix_5samples.txt", sep = "\t", col.names = T, row.names = F, quote = F)
seq(20,24,1)
colnames(df.select)[-1] <-paste0(rep("sample",5), c(1,2,22,23,24))
write.table(df.select, file = "../example_data_for_test_function/gene_exp/gene_exp_fpkm_5samples_mix.txt", sep = "\t", col.names = T, row.names = F, quote = F)
colnames(dt.select)[-1] <-paste0(rep("sample",5), c(1,2,22,23,24))
write.table(dt.select, file = "../example_data_for_test_function/gene_mut/gene_mut_matrix_5samples_mix.txt", sep = "\t", col.names = T, row.names = F, quote = F)
#example:
#gene mutation
#mutation matrix
inputData <- read.delim("../example_data_for_test_function/gene_mut/gene_mut_matrix_5samples.txt", sep = "\t", stringsAsFactors = F)
View(inputData)
maf <- read.delim("../CCLE_22Q2/CCLE_mutations.txt", sep = "\t", stringsAsFactors = F)
View(maf)
unique(maf$DepMap_ID)
maf.select <- maf[which(maf$DepMap_ID %in% unique(maf$DepMap_ID)[1:10]), ]
View(maf.select)
colnames(maf)
colnames(maf)[16]
colnames(maf)[16] <- "Tumor_Sample_Barcode"
maf.select <- maf[which(maf$Tumor_Sample_Barcode%in% unique(maf$Tumor_Sample_Barcode)[1:10]), ]
nique(maf$Tumor_Sample_Barcode)[1:10]
unique(maf$Tumor_Sample_Barcode)[1:10
]
i=1
unique(maf$Tumor_Sample_Barcode)[i])
unique(maf$Tumor_Sample_Barcode)[i]
paste0("sample",i)
for (i in 1:10) {
maf.select$Tumor_Sample_Barcode[which(maf.select$Tumor_Sample_Barcode == unique(maf$Tumor_Sample_Barcode)[i])] <- paste0("sample",i)
}
unique(maf.select$Tumor_Sample_Barcode)
write.table(dt.select, file = "../example_data_for_test_function/gene_mut/gene_mut_matrix_10samples_maf.txt", sep = "\t", col.names = T, row.names = F, quote = F)
write.table(maf.select, file = "../example_data_for_test_function/gene_mut/gene_mut_matrix_10samples_maf.txt", sep = "\t", col.names = T, row.names = F, quote = F)
maf.select <- maf.select[which(maf.select$Tumor_Sample_Barcode %in% unique(maf.select)[1:5]),]
write.table(maf.select, file = "../example_data_for_test_function/gene_mut/gene_mut_matrix_5samples_maf.txt", sep = "\t", col.names = T, row.names = F, quote = F)
maf.select$Tumor_Sample_Barcode[which(maf.select$Tumor_Sample_Barcode == "sample2")]
maf.select$Tumor_Sample_Barcode[which(maf.select$Tumor_Sample_Barcode == "sample2")] <-"sample20"
maf.select$Tumor_Sample_Barcode[which(maf.select$Tumor_Sample_Barcode == "sample3")] <-"sample7"
unique(maf.select)
maf.select <- maf[which(maf$Tumor_Sample_Barcode%in% unique(maf$Tumor_Sample_Barcode)[1:10]), ]
for (i in 1:10) {
maf.select$Tumor_Sample_Barcode[which(maf.select$Tumor_Sample_Barcode == unique(maf$Tumor_Sample_Barcode)[i])] <- paste0("sample",i)
}
maf.select <- maf.select[which(maf.select$Tumor_Sample_Barcode %in% unique(maf.select$Tumor_Sample_Barcode)[1:5]),]
unique(maf.select$Tumor_Sample_Barcode)
write.table(maf.select, file = "../example_data_for_test_function/gene_mut/gene_mut_matrix_5samples_maf.txt", sep = "\t", col.names = T, row.names = F, quote = F)
maf.select$Tumor_Sample_Barcode[which(maf.select$Tumor_Sample_Barcode == "sample2")] <-"sample20"
maf.select$Tumor_Sample_Barcode[which(maf.select$Tumor_Sample_Barcode == "sample3")] <-"sample7"
unique(maf.select$Tumor_Sample_Barcode)
write.table(maf.select, file = "../example_data_for_test_function/gene_mut/gene_mut_matrix_5samples_maf_mix.txt", sep = "\t", col.names = T, row.names = F, quote = F)
